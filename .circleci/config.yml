version: 2.1

commands:
  install-deps:
    parameters:
      ver_major:
        type: string
        default: "3"
      ver_minor:
        type: string
        default: "9"
    steps:
      - run: pyenv local <<parameters.ver_major>>.<<parameters.ver_minor>>
      - restore_cache:
          name: restore dependency cache
          keys:
            - poetry-py<<parameters.ver_major>><<parameters.ver_minor>>-{{ checksum "poetry.lock" }}
      - run: poetry env use <<parameters.ver_major>>.<<parameters.ver_minor>>
      - run: poetry install -q
      - save_cache:
          name: save dependency cache
          key: poetry-py<<parameters.ver_major>><<parameters.ver_minor>>-{{ checksum "poetry.lock" }}
          paths:
            - ~/.cache/pypoetry/
  bump-version:
    parameters:
      flags:
        type: string
        default: ""
    steps:
      - run: poetry run inv adjust
      - run: poetry run inv bump <<parameters.flags>>
      - run: poetry run inv qa
  deploy-test:
    steps:
      - run: poetry run inv deploy-test
  deploy-prod:
    steps:
      - run: poetry run inv deploy-prod
  configure-git:
    steps:
      - run: git config user.name "Maciej Wiatrzyk"
      - run: git config user.email "maciej.wiatrzyk@wiatrzyk.com"
      - run: git config committer.name "CircleCI"
      - run: git config committer.email "noreply@circleci.com"
  push-to-git:
    steps:
      - run: git push --set-upstream origin $CIRCLE_BRANCH
      - run: git push --tags
  publish-coverage:
    steps:
      - run: poetry run inv qa-cov -f0
      - run: curl -Os https://uploader.codecov.io/latest/linux/codecov
      - run: chmod +x codecov
      - run: ./codecov

jobs:
  test:
    docker:
      - image: cimg/python:<<parameters.ver_major>>.<<parameters.ver_minor>>
    parameters:
      ver_minor:
        type: string
      ver_major:
        type: string
    steps:
      - checkout
      - install-deps:
          ver_major: <<parameters.ver_major>>
          ver_minor: <<parameters.ver_minor>>
      - run: poetry run inv qa
  release:
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout
      - configure-git
      - install-deps:
          ver_major: "3"
          ver_minor: "9"
      - run: poetry run inv adjust
      - run: poetry run cz changelog --incremental
      - run: poetry run cz bump || circleci-agent step halt
      - run: poetry run inv qa
      #- bump-version
      #- deploy-test
      #- deploy-prod
      - push-to-git
      - publish-coverage

workflows:
  test:
    jobs:
      - test:
          name: "test-py37"
          ver_major: "3"
          ver_minor: "7"
      - test:
          name: "test-py38"
          ver_major: "3"
          ver_minor: "8"
      - test:
          name: "test-py39"
          ver_major: "3"
          ver_minor: "9"
      - test:
          name: "test-py310"
          ver_major: "3"
          ver_minor: "10"
      - release:
          requires:
            - test-py37
            - test-py38
            - test-py39
            - test-py310
          filters:
            branches:
              only: master
